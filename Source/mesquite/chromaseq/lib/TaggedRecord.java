/* Mesquite chromaseq source code.  Copyright 2005-2006 D. Maddison and W. Maddison.Disclaimer:  The Mesquite source code is lengthy and we are few.  There are no doubt inefficiencies and goofs in this code. The commenting leaves much to be desired. Please approach this source code with the spirit of helping out.Perhaps with your help we can be more than a few, and make Mesquite better.Mesquite is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY.Mesquite's web site is http://mesquiteproject.orgThis source code and its compiled class files are free and modifiable under the terms of GNU Lesser General Public License.  (http://www.gnu.org/copyleft/lesser.html)*/package mesquite.chromaseq.lib; import java.io.*;public class TaggedRecord {		private String tagName;	private int tagNum, eNum, arrayLength, dataRecord, cryptic;	private short dataType, eLength;	private char[] tagArray;		public TaggedRecord() {}	public TaggedRecord(DataInput IN) throws IOException {		read(IN);}	public void read(DataInput filterIN) throws IOException {		int i;		char[] tagArray = new char[4];		for (i=0;i<4;i++) {		tagArray[i] += (char) (filterIN.readUnsignedByte());	}		tagName = new String(tagArray);		tagNum = filterIN.readInt();		dataType = filterIN.readShort();		eLength = filterIN.readShort();		eNum = filterIN.readInt();		arrayLength = filterIN.readInt();		dataRecord = filterIN.readInt();		cryptic = filterIN.readInt();			}	public String getTagName() {		return tagName;	}	public int getTagNum() {		return tagNum;	}	public short getDataType() {		return dataType;	}	public int getElementLength() {		return eLength;	}	public int getElementNumber() {		return eNum;	}	public int getArrayLength() {		return arrayLength;	}	public int getDataRecord() {		return dataRecord;	} }